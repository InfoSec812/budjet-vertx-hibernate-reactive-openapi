package {{package}};

{{#imports}}import {{import}};
{{/imports}}

import io.vertx.core.Future;
import io.vertx.core.Vertx;
import io.vertx.ext.web.api.service.ServiceRequest;
import io.vertx.ext.web.api.service.ServiceResponse;
import io.vertx.ext.web.api.service.WebApiServiceGen;
import io.vertx.ext.web.handler.HttpException;
import org.hibernate.reactive.mutiny.Mutiny;
import io.vertx.core.AsyncResult;
import io.vertx.core.Handler;
import io.vertx.core.json.JsonObject;

import java.util.List;
import java.util.Map;

@WebApiServiceGen
public interface {{classname}}  {
{{#operations}}{{#operation}}
    /**
    * {{summary}}
    * {{#allParams}}
    * @param {{#isBodyParam}}body{{/isBodyParam}}{{^isBodyParam}}{{paramName}}{{/isBodyParam}} {{description}} {{/allParams}}
    * @param ctx The {@link ServiceRequest} which has the information about the request
    * @return A {@link Future} containign a {@link ServiceResponse} with the result of the request
    */
    default Future<ServiceResponse> {{operationId}}({{#allParams}}{{#isPrimitiveType}}{{#isDate}}String{{/isDate}}{{^isDate}}{{{dataType}}}{{/isDate}}{{/isPrimitiveType}}{{^isPrimitiveType}}JsonObject{{/isPrimitiveType}} {{#isBodyParam}}body{{/isBodyParam}}{{^isBodyParam}}{{paramName}}{{/isBodyParam}}, {{/allParams}}ServiceRequest ctx) {
        return Future.failedFuture(new HttpException(501, "Not yet implemented"));
    }
{{/operation}}{{/operations}}

    /**
    * A method used by the Vert.x ServiceProxy to create instances of this Service
    *
    * @param vertx The {@link Vertx} instance for the context of this Service
    */
    static {{classname}} create(Vertx vertx) {
        return new {{classname}}Impl(vertx);
    }
}